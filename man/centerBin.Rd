% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/centerBin.R
\name{centerBin}
\alias{centerBin}
\title{Cut a set of numeric data into bins based on the middle value of the bin}
\usage{
centerBin(x, breaks)
}
\arguments{
\item{x}{A numeric string}

\item{breaks}{the desired breaks in that string set by what the middle value
should be}
}
\value{
Returns a vector of numeric data
}
\description{
This function cuts a vector of numeric data such that the breaks are set
using the middle value of a given bin rather than setting upper or lower
boundaries for each bin. For example, say you've got a vector of blood draw
times that weren't drawn at *exactly* the nominal time but were close to it.
Set the bins here to the nominal times, and the data will be filed into the
slot that's closest to the nominal time at which that sample should have been
drawn.
}
\examples{

# Let's look at an example where the times in a PK study weren't perfect.
data(ConcTime)
IdealTimes <- unique(ConcTime$TimeHr)

# Let's add a little bit of noise for one subject.
Subj101 <- ConcTime \%>\% filter(SubjectID == 101 & DoseRoute == "IV" &
                               Drug == "A") \%>\%
         select(SubjectID, TimeHr, Concentration)
Subj101$ActualTimeHr <- Subj101$TimeHr *
          rnorm(nrow(Subj101), 1, 0.1))

ActualTimes <- IdealTimes * rnorm(length(IdealTimes), 0, 0.1)

# Finally, use centerBin to get (close to) back to the ideal time.
Subj101$TimeHr_ideal <- centerBin(Subj101$ActualTimeHr,
                                  breaks = IdealTimes)
# (This is obviously not perfect, but play with the bins you set and you
# can do ok here.)

}
