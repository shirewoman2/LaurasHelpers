% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/terminalFit.R
\name{terminalFit}
\alias{terminalFit}
\title{Calculate the elimination rate of the terminal portion of a
concentration-time curve}
\usage{
terminalFit(
  DF,
  startValues = NA,
  concentration = "Concentration",
  time = "Time",
  tmax = NA,
  modelType = "monoexponential",
  returnDataUsed = FALSE,
  weights = NULL,
  returnRSS = FALSE,
  useNLS_outnames = TRUE,
  maxiter = 50
)
}
\arguments{
\item{DF}{The data.frame with the concentration-time data}

\item{concentration}{A character string of the column name in DF that
contains concentration data}

\item{time}{A character string of the column name in DF that contains time
data}

\item{tmax}{The putative tmax, which is used for estimating the terminal
elimination rate. Time points \emph{before} tmax will be omitted from the
fit.}

\item{modelType}{The mathematical model to use for fitting the data; options
are "monoexponential", "biexponential", or "triexponential".}

\item{returnDataUsed}{Should the data used be returned? I wrote this script
initially for bootstrapping, where it can be useful to see what data were
used as input. For that reason, I'm including the option of returning the
data that were used.}

\item{weights}{Any weighting to be used for the nonlinear regression}

\item{returnRSS}{TRUE or FALSE for whether to resturn the residual sum of
squares. If set to TRUE, this will be the last column of the output
data.frame where all rows = the residual sum of squares. (I wanted the
output to still be a data.frame, so that's the place I could think of to
put it.)}

\item{useNLS_outnames}{TRUE or FALSE for whether to use the standard output
coeffecient names that come with the nls or nls2 functions, e.g.,
"Estimate", "Std. Error", "t value", and "Pr(>|t|)". These names are
annoying to work with for output data.frames b/c they don't follow standard
column-naming practices (they contain spaces and symbols). If set to FALSE,
the names of the output coefficient data.frame will be "Estimate", "SE",
"tvalue" and "pvalue".}
}
\value{
Returns a data.frame of the coefficients or a list containing a
  data.frame of the input data and a data.frame of the estimated coefficients
}
\description{
\code{terminalFit} fits an exponential equation to concentration-time data.
The equation should be of the form \eqn{f(t) = concentration = A * exp(-kt)}
where A is ~Cmax, k is the terminal elimination rate constant, and t is time,
and the model can be monoexponential, biexponential, or triexponential decay.
}
\examples{
# Example data to work with:
data(ConcTime)
Subj101 <- ConcTime \%>\% filter(SubjectID == 101 & DoseRoute == "IV" &
                                     Drug == "A") \%>\%
      select(SubjectID, TimeHr, Concentration)

# Automatically select the start values
terminalFit(Subj101, concentration = "Concentration", time = "TimeHr",
            modelType = "monoexponential")

# Set the start values yourself
terminalFit(Subj101, concentration = "Concentration", time = "TimeHr",
            tmax = 0, startValues = list(A = 30, k = 0.01),
            modelType = "monoexponential")

# Use the more robuse nls2 function to do the regression by selecting a range of
# values to search.
terminalFit(Subj101, concentration = "Concentration", time = "TimeHr",
            tmax = 0,
            startValues = data.frame(A = c(5, 50), k = c(0.0001, 0.05)),
            modelType = "monoexponential")

# Weight by 1/y
terminalFit(Subj101, concentration = "Concentration", time = "TimeHr",
            tmax = 0,
            weight = 1/Subj101$Concentration,
            modelType = "monoexponential")

# Get the residual sum of squares
terminalFit(Subj101, concentration = "Concentration", time = "TimeHr",
            modelType = "monoexponential", returnRSS = TRUE)

# Use better names for the columns in the output
terminalFit(Subj101, concentration = "Concentration", time = "TimeHr",
            modelType = "monoexponential", useNLS_outnames = FALSE)


}
