% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/formatXL.R
\name{formatXL}
\alias{formatXL}
\title{Format data with font colors, font sizes, alignments, borders, etc. when you
write them to an Excel file}
\usage{
formatXL(
  DF,
  file,
  sheet = NA,
  colWidth = list(colNum = NULL, colName = NULL, width = NULL),
  styles
)
}
\arguments{
\item{DF}{input data.frame}

\item{file}{file name (character)}

\item{sheet}{sheet name (character). Defaults to the name of the supplied
data.frame if no other name is supplied.}

\item{colWidth}{A named list of \code{colNum} or \code{colName} and
\code{width} in pixels. Examples: \itemize{ \item \code{colWidth =
list(colNum = c(1, 5, 6), width = 25)} \item \code{colWidth = list(colName
= c("ColA", "ColG"), width = c(10, 30))}} If colNum and colName are set to
NULL, all columns will be set to the width listed. For any columns not
specifically set or if width is set to NULL, reasonable guesses for column
widths will be used.}

\item{styles}{A list of lists (one list for every set of cells that you want
  to format) that contains the following named objects: \describe{

  \item{\code{rows}}{A vector of the row indices for the cells whose
  formatting we're setting. Leaving \code{rows} unspecified applies the
  formatting to all rows in the sheet. \strong{Important note:} For
  consistency with row naming elsewhere in R, row 1 refers to the 1st row
  \emph{of data} in the data.frame, NOT the header. If you would like to
  apply the formatting to the header, set the row to 0. Examples:
  \itemize{\item \code{rows = 1:5} \item \code{rows = c(5, 23, 60)}}}

  \item{\code{columns}}{A vector of the column indices or names for all the
  cells whose formatting we're setting. Leaving \code{columns} unspecified
  applies the formatting to all columns. Examples: \itemize{ \item
  \code{columns = c(1, 2, 8)} \item \code{columns = c("ColB", "ColH",
  "ColQ")}}}

  \item{\code{numberFormat}}{The format for displaying any numbers in the
  cells. Options are "date", "general" (doesn't format anything), or
  "currency" (dollar sign included, negative numbers are red, and 2 digits
  included). Example: \itemize{\item \code{numberFormat = "currency"}}}

  \item{\code{font}}{A named list of "color", "size", "bold", "italics",
  and/or "underline" to set the font style.

  \describe{ \item{\code{color}}{Color options are standard color names s/a
  "red", "blue", "purple" or any of the possible named colors available in R.
  For a list of indexed color names, with the \code{xlsx} package loaded,
  type "INDEXED_COLORS_" into the console.}

  \item{\code{size}}{Size is the font size, with typical values being 10 or
  11. Setting it to NULL means it will not change from the default.}

  \item{\code{bold}, \code{italics}, \code{underline}}{The "bold", "italics",
  and "underline" values are logical and default to FALSE.}}

  Examples: \itemize{ \item \code{font = list(color = "blue", bold = TRUE,
  italics = FALSE, underline = FALSE)} \item \code{font = list(color = "red",
  size = 16)}}}

  \item{\code{textposition}}{A named list of "alignment" and "wrapping".
  \describe{ \item{\code{alignment}}{Alignment can be left, right, center, or
  general (all are vertically aligned to the bottom), or "middle" for
  vertical and horizontal alignment to the center.}

  \item{\code{wrapping}}{Wrapping is TRUE or FALSE for whether the text
  should be wrapped.}} Examples: \itemize{ \item \code{textposition =
  list(alignment = "center", wrapping = TRUE)} \item \code{textposition =
  list(alignment = "right")}}}

  \item{\code{border}}{A named list of color, position, and pen. \describe{

  \item{\code{color}}{The same color options that worked for assigning the
  font color work for coloring the border.}

  \item{\code{position}}{The position  can be "bottom", "left", "top", or
  "right".}

  \item{\code{pen}}{The options for the pen setting, which is optional and
  defaults to a thin border, are "solid" ("BORDER_THIN" behind the scenes),
  "hair" for really thin hairline, "medium" for a medium-thickness line,
  "thick" for a thick line, "dashed", "dotted", and "none".}} Examples:
  \itemize{\item \code{border = list(color = "black", position = c("top",
  "bottom"))} \item \code{border = list(color = "red", position = "left", pen
  = "thick")}}}

  \item{\code{fill}}{A color s/a "red", "blue", "purple" or any of the
  possible named colors available in R.}}}
}
\value{
This does not return any R objects; it saves an Excel file.


}
\description{
This function takes a data.frame you want to save to an Excel file using the
package \code{xlsx} and applies the formatting you want for the Excel file.
\strong{Warning:} The arguments for this function are a lot of lists, and it
can be tricky to get the syntax exactly right, but I haven't yet come up with
a better way of doing things. If this isn't working, check that your lists
are laid out correctly and named correctly.
}
\details{
If this will create a new Excel file or if your current Excel file
  has no other sheets but this one, this will generate a message "Workbook
  has no sheets!" that I \emph{cannot} seem to get rid of.

  \strong{COMMON ERRORS or ERROR MESSAGES} since this is a tad (ok, a LOT)
  glitchy: \code{styles} is meant to accommodate multiple sets of formatting,
  so you have to have \code{styles} be a list but then also each set of cells
  that you're formatting must also be a list. This means that styles should
  probably look like this in your code: \code{styles = list(list(...))}

  If you set a style for a cell and then set another style for that same
  cell, the final style will be the 2nd one, not a combination of the two.
  For example, say you select row 1 and make it blue and bold, and then you
  add a border on the left side of all cells in column 4. The cell in row 1,
  column 4 will be the default Excel style of text plus having a border on
  the left side - not blue, bold, \emph{and} border on left.
}
\examples{
data(iris)

formatXL(DF = iris \%>\%
         dplyr::mutate(Date = as.Date("2020-11-03"),
                Money = rnorm(nrow(.), 20, 20)),
         file = "test.xlsx", sheet = "iris1",
         colWidth = list(colNum = NA, width = 30),
         styles = list(list(rows = 0, columns = NA,
                            font = list(bold = TRUE, size = 18),
                            textposition = list(alignment = "middle",
                                                wrapping = TRUE)),
                       list(rows = NA, columns = 6,
                            numberFormat = "date"),
                       list(rows = NA, columns = 7,
                            numberFormat = "currency")))

formatXL(DF = iris, file = "test.xlsx", sheet = "iris2",
         colWidth = list(colNum = c(1, 5, 6), width = c(25, 10, 30)),
         styles = list(list(rows = 4, columns = NA,
                            font = list(color = "blue", bold = TRUE)),
                       list(rows = 8:9, columns = 3,
                            font = list(color = "red", italics = TRUE),
                            textposition = list(alignment = "center",
                                                wrapping = TRUE),
                            fill = "dodgerblue3"),
                       list(rows = 0, columns = 1),
                            font = list(color = "purple", underline = TRUE),
                            textposition = list(alignment = "right",
                                                wrapping = TRUE)))


}
